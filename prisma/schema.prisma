// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id    String  @id @default(uuid())
  name  String
  email String  @unique
  image String?
  bio   String?
  link  String?

  likes  Like[]
  tweets Tweet[]

  following Follow[] @relation("Following")
  followers Follow[] @relation("Followers")

  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tweet {
  id      String  @id @default(uuid())
  content String
  image   String?
  video   String?

  likes Like[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Like {
  id      String @id @default(uuid())
  tweetId String
  userId  String
  User    User   @relation(fields: [userId], references: [id])
  Tweet   Tweet  @relation(fields: [tweetId], references: [id])
}

model Follow {
  id          String @id @default(uuid())
  follower    User   @relation("Following", fields: [followerId], references: [id])
  followerId  String
  following   User   @relation("Followers", fields: [followingId], references: [id])
  followingId String

  @@unique([followerId, followingId])
}
